<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd 
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd 
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 只管理@Controller类型的bean，忽略其他类型的bean，如@Services等等 -->
	<context:component-scan
		base-package="com.mvcdemo">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 注册拦截器 -->
	<mvc:interceptors>
	<!-- 如果是拦截所有的请求，只写bean就行 -->
		<bean class="com.mvcdemo.Controller.HelloInterceptor1"/>
		<!-- 如果要拦截特定的请求，就要如下配置完整 -->
					<mvc:interceptor>
			<mvc:mapping path="/Employee/helloSpringMVC"/>
			<bean class="com.mvcdemo.Controller.HelloInterceptor2"/>
			</mvc:interceptor>

	</mvc:interceptors>

	<!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
	<mvc:annotation-driven />

	<!-- 静态资源处理，css,js,imgs -->
	<mvc:resources location="/resources"
		mapping="/resources/**" />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsps/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 上传文件的大小最大为100M,100*1024*1024 -->
		<property name="maxUploadSize" value="104857600"></property>
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 推迟文件解析，以便捕获文件大小异常，在真正需要上传文件的时候才进行解析，提高性能 -->
		<property name="resolveLazily" value="true"></property>
	</bean>


</beans>